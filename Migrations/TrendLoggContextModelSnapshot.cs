// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trendlogg.Data;

namespace Trendlogg.Migrations
{
    [DbContext(typeof(TrendLoggContext))]
    partial class TrendLoggContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Trendlogg.Models.Channel", b =>
                {
                    b.Property<int>("Channel_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Elevation")
                        .HasColumnType("int");

                    b.Property<int>("Latitude")
                        .HasColumnType("int");

                    b.Property<int>("LifeTime")
                        .HasColumnType("int");

                    b.Property<int>("Longitude")
                        .HasColumnType("int");

                    b.Property<int>("MaxSize")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeZone")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Channel_ID");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("Trendlogg.Models.Feed", b =>
                {
                    b.Property<int>("PointID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Alarm")
                        .HasColumnType("int");

                    b.Property<string>("AlarmSettings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Channel_ID")
                        .HasColumnType("int");

                    b.Property<int>("Enable_Alarm")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Scale")
                        .HasColumnType("int");

                    b.HasKey("PointID");

                    b.HasIndex("Channel_ID");

                    b.ToTable("Feeds");
                });

            modelBuilder.Entity("Trendlogg.Models.Point", b =>
                {
                    b.Property<int>("PointID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FeedPointID")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("PointID");

                    b.HasIndex("FeedPointID");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("Trendlogg.Models.Feed", b =>
                {
                    b.HasOne("Trendlogg.Models.Channel", null)
                        .WithMany("Feeds")
                        .HasForeignKey("Channel_ID");
                });

            modelBuilder.Entity("Trendlogg.Models.Point", b =>
                {
                    b.HasOne("Trendlogg.Models.Feed", null)
                        .WithMany("Points")
                        .HasForeignKey("FeedPointID");
                });
#pragma warning restore 612, 618
        }
    }
}
